/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_PROTO_FILES_MEASUREMENTMESSAGE_PB_H_INCLUDED
#define PB_PROTO_FILES_MEASUREMENTMESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MeasurementMessage {
    float temperature;
} MeasurementMessage;


/* Initializer values for message structs */
#define MeasurementMessage_init_default          {0}
#define MeasurementMessage_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define MeasurementMessage_temperature_tag       1

/* Struct field encoding specification for nanopb */
#define MeasurementMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       1)
#define MeasurementMessage_CALLBACK NULL
#define MeasurementMessage_DEFAULT NULL

extern const pb_msgdesc_t MeasurementMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MeasurementMessage_fields &MeasurementMessage_msg

/* Maximum encoded size of messages (where known) */
#define MeasurementMessage_size                  5

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
